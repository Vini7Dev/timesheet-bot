generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model Users {
  id          String    @id @default(uuid())
  name        String
  email       String    @unique
  username    String    @unique
  password    String
  markings    Markings[]
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now())

  @@map("users")
}

model Customers {
  id                String    @id @default(uuid())
  code              String
  name              String
  projects          Projects[]
  created_at        DateTime  @default(now())
  updated_at        DateTime  @default(now())

  @@map("customers")
}

model Projects {
  id                String    @id @default(uuid())
  code              String
  name              String
  customer_id       String?
  customer          Customers? @relation(fields: [customer_id], references: [id], onDelete: SetNull, onUpdate: Cascade)
  markings          Markings[]
  created_at        DateTime  @default(now())
  updated_at        DateTime  @default(now())

  @@map("projects")
}

model Markings {
  id                    String            @id @default(uuid())
  on_timesheet_id       String?
  on_timesheet_status   OnTimesheetStatus @default(NOT_SENT)
  timesheet_error       String?
  description           String
  date                  String
  start_time            String
  finish_time           String
  start_interval_time   String?
  finish_interval_time  String?
  work_class            WorkClass         @default(PRODUCTION)
  user_id               String?
  user                  Users?            @relation(fields: [user_id], references: [id], onDelete: SetNull, onUpdate: Cascade)
  project_id            String?
  project               Projects?         @relation(fields: [project_id], references: [id], onDelete: SetNull, onUpdate: Cascade)
  created_at            DateTime          @default(now())
  updated_at            DateTime          @default(now())

  @@map("markings")
}

enum OnTimesheetStatus {
  NOT_SENT
  SENDING
  SENT
  ERROR
}

enum WorkClass {
  PRODUCTION
  ABSENCE
}
